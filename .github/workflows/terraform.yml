name: Terraform
on:
  push:
    branches: ["ci"]
  pull_request:
  workflow_dispatch:

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/yc
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: debug
        run: |
          env
          pwd

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          # Add to PATH for subsequent commands
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
        shell: bash

      - name: Configure Yandex Cloud CLI
        run: |
          mkdir -p ~/.yc
          echo "${{ secrets.YC_KEY_JSON }}" > ~/.yc/key.json
          yc config set service-account-key ~/.yc/key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          echo "${{ secrets.YC_KEY_JSON }}" > key.json

      - name: List instances
        run: yc compute instance list

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init -input=false

      - name: Terraform Format
        run: terraform fmt -check
        continue-on-error: true # Optional: don't fail if formatting is off

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "${{ secrets.YC_KEY_JSON }}" > key.json
          terraform plan -input=false -no-color -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/yc/tfplan

      - name: Terraform Apply (Auto on master)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false tfplan

  apply:
    name: Terraform Apply (Manual Approval)
    needs: plan
    runs-on: ubuntu-latest # Fixed: was "terraform/yc"
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request'
    environment:
      name: production
      url: https://example.com
    defaults:
      run:
        working-directory: terraform/yc # Fixed: was "infra/terraform"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform/yc

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init -input=false

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -input=false -auto-approve tfplan
