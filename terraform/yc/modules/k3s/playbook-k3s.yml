---
- name: Install k3s masters
  hosts: masters
  become: yes
  tasks:
    - name: Check if k3s is already installed
      ansible.builtin.stat:
        path: /usr/local/bin/k3s
      register: k3s_binary

    - name: Install k3s server on first master
      ansible.builtin.shell: |
        curl -sfL https://get.k3s.io | sh -s - server --cluster-init --tls-san {{ master_hostname }}
      when:
        - inventory_hostname == groups['masters'][0]
        - not k3s_binary.stat.exists
      run_once: true

    - name: Get k3s token from first master
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token
      when:
        - inventory_hostname == groups['masters'][0]
        - not k3s_binary.stat.exists
      register: k3s_token
      run_once: true

- name: Install k3s workers
  hosts: workers
  become: yes
  tasks:
    - name: Check if k3s is already installed
      ansible.builtin.stat:
        path: /usr/local/bin/k3s
      register: k3s_binary

    - name: Install k3s agent
      ansible.builtin.shell: |
        curl -sfL https://get.k3s.io | sh -s - agent \
          --server https://{{ master_hostname }}:6443 \
          --token {{ hostvars[groups['masters'][0]].k3s_token.stdout }}
      when: not k3s_binary.stat.exists

- name: Retrieve kubeconfig from master
  hosts: masters[0]
  tasks:
    - name: Get kubeconfig
      become: yes
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ TF_ROOT }}/kubeconfig"
        flat: yes

    - name: Update kubeconfig with correct server address
      ansible.builtin.replace:
        path: "{{ TF_ROOT }}/kubeconfig"
        regexp: "server: https://127.0.0.1:6443"
        replace: "server: https://{{ master_hostname }}:6443"
      delegate_to: localhost
